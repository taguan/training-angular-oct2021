openapi: 3.0.3

info:
  title: Scrum Board API
  version: 0.0.1
  description: 'This is a wonderful API to manipulate a wonderful Scrum Board'

paths:
  /cards:
    get:
      summary: 'retrieve all cards or cards by state if the optional parameter is given'
      operationId: getCards
      parameters:
        - name: state
          in: query
          required: false
          schema:
            type: string
            enum: ['todo', 'in-progress', 'done']
      responses:
        200:
          description: 'the requested cards'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Card'
        400:
          description: 'wrong state parameter'
          content:
            application/json:
              schema:
                type: string

    post:
      summary: 'create a new card'
      operationId: createCard
      requestBody:
        description: the card to be created
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Card'
      responses:
        200:
          description: 'the created card'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Card'
        400:
          description: 'invalid card'
          content:
            application/json:
              schema:
                type: string

  /cards/{cardId}:
    get:
      summary: 'get a card'
      operationId: getCard
      parameters:
        - name: cardId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: 'the card'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Card'
        404:
          description: 'card not found'
          content:
            application/json:
              schema:
                type: string

    put:
      summary: 'modifies a card'
      operationId: updateCard
      parameters:
        - name: cardId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        description: the card to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Card'
      responses:
        200:
          description: 'the updated card'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Card'
        400:
          description: 'invalid card'
          content:
            application/json:
              schema:
                type: string

        404:
          description: 'card not found'
          content:
            application/json:
              schema:
                type: string



components:
  schemas:
    Card:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          description: 'the name of this card'
          type: string
        description:
          description: 'the description of this card'
          type: string
        state:
          type: string
          enum:
            - todo
            - in-progress
            - done
      required:
        - name
        - description
        - id
        - state

